import PageTitle from '@/components/PageTitle'
import React, { useState } from 'react'
import GiftCard from '@/components/GiftCard'
import { GiftType } from '@/types/types'
import { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import AddToShoppingCard from '@/components/AddToShoppingCard'

interface Props {
    gifts: GiftType[];
}

const GiftPage: NextPage<Props> = ({gifts}) => {

 const [hovered, setHovered] = useState(false);
 const [clicked, setClicked] = useState(null);

 const handleHoverClick = (id: any) => {
    setClicked(id);
 };


  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <div className='my-4'>
      <PageTitle title="Gift картички за подарок"/>
      </div>
      <div className="container-fluid">
          <div className="row d-flex flex-column justify-content-center mr-auto ml-auto">
            <div className='col-11 mr-auto ml-auto p-0'>
            {gifts?.map((card, index) => {
              return (
                  <GiftCard key={index} gift={card} index={index}/>
                )
              })}
            </div>
            <div className='col-10 d-flex flex-column justify-content-center mr-auto ml-auto mb-5'>
            <p className='title mb-4'>Одбери цена на подарок картичка:</p>
            <button 
              className={`${clicked === "500" &&
              hovered
                  ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                  : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                
                }`}
                onMouseEnter={() => setHovered(true)}
                onMouseLeave={() => setHovered(false)} 
                  onClick={() => handleHoverClick('500')}>
                { clicked === "500" && hovered ? 'Додај во кошничка' : '500 ден.' && clicked === "500"  ? <AddToShoppingCard /> : "500"}
            </button>
            <button 
                className={`${ clicked === "1000" &&
                hovered
                    ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                    : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                  
                  }`}
                  onMouseEnter={() => setHovered(true)}
                  onMouseLeave={() => setHovered(false)}
                  onClick={() => handleHoverClick('1000')}>
                  { clicked === "1000" && hovered ? 'Додај во кошничка' : '1000 ден.' && clicked === "1000" ? <AddToShoppingCard /> : "1000"}
            </button>
            <button 
              className={`${clicked === "2000" &&
              hovered
                  ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                  : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                
                }`}
                onMouseEnter={() => setHovered(true)}
                onMouseLeave={() => setHovered(false)}
                onClick={() => handleHoverClick('2000')} >
                { clicked === "2000" && hovered ? 'Додај во кошничка' : '2000 ден.'  && clicked === "2000" ? <AddToShoppingCard /> : "2000"}
            </button>
            <button 
              className={`${clicked === "2500" &&
              hovered
                  ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                  : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                
                }`}
                onMouseEnter={() => setHovered(true)}
                onMouseLeave={() => setHovered(false)}
                onClick={() => handleHoverClick('2500')} >
                { clicked === "2500" && hovered ? 'Додај во кошничка' : '2500 ден.'  && clicked === "2500" ? <AddToShoppingCard /> : "2500" }
            </button>
            <button 
                className={`${ clicked === "4000" &&
                hovered
                    ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                    : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                  
                  }`}
                  onClick={() => handleHoverClick('4000')}
                  onMouseEnter={() => setHovered(true)}
                  onMouseLeave={() => setHovered(false)} >
                  { clicked === "4000" && hovered ? 'Додај во кошничка' : '4000 ден.'  && clicked === "4000" ? <AddToShoppingCard /> : "4000"}
            </button>
            </div>
        </div>
      </div>
    </>
  )
}

export default GiftPage;


export const getStaticProps: GetStaticProps = async () => {

  const res = await fetch("http://localhost:5001/gifts");
  const gifts: GiftType[] = await res.json();

 return {
    props: {
      gifts,
    },
 };
};